- sensor:
    - unique_id: sidebar
      state: template
      attributes:
        time: >
          {% set hours = now().strftime('%H') %}
          {% set minutes = now().strftime('%M') %}
          <span class="time">
            {{ hours }}<span class="time-colon">:</span>{{ minutes }}
          </span>
        date: >
          <font color='#6a7377'><b>
          {% if strptime(states('sensor.date'), '%Y-%m-%d').day != None %}
          {% set days = ['Maandag', 'Dinsdag', 'Woensdag', 'Donderdag', 'Vrijdag', 'Zaterdag', 'Zondag'] %}
          {% set months = ['Januari', 'Februari', 'Maart', 'April', 'Mei', 'Juni',
            'Juli', 'Augustus', 'September', 'Oktober', 'November', 'December'] %}
            {{ days[now().weekday()] }}<br>
            {{ strptime(states('sensor.date'), '%Y-%m-%d').day }} {{ months[now().month-1] }}
          {% endif %}
          </b></font>
        greet: >
          <b>
          {% set time = now().hour %}
          {% if time <= 1 %} Welterusten {{'\U0001F611'}}
          {% elif time <= 3 %} Welterusten {{'\U0001F62A'}}
          {% elif time <= 5 %} Welterusten {{'\U0001F634'}}
          {% elif time <= 7 %} Goedemorgen {{'\U0001F4A9'}}
          {% elif time <= 9 %} Goedemorgen {{'\u2615\uFE0F'}}
          {% elif time <= 10 %} Goedemorgen {{'\U0001F642'}}
          {% elif time <= 13 %} Goedemiddag {{'\U0001F60A'}}
          {% elif time <= 15 %} Goedemiddag {{'\U0001F60E'}}
          {% elif time <= 17 %} Goedemiddag {{'\U0001F44B\U0001F3FB'}}
          {% elif time <= 19 %} Goedenavond {{'\U0001F44B\U0001F3FB'}}
          {% elif time <= 22 %} Goedenavond {{'\U0001F60C'}}
          {% elif time <= 23 %} Goedenavond {{'\U0001F974'}}
          {% else %} Goedenavond {{'\U0001F974'}}
          {% endif %}
          </b>
        active: >
          <b>
          {% set lights = [
            states.light.on_off_plug_1,
            states.light.hue_ambiance_spot_10,
            states.light.hue_ambiance_spot_11,
            states.light.hue_ambiance_spot_12,
            states.light.hue_ambiance_spot_13,
            states.light.dimmable_light_1,
            states.light.hue_ambiance_spot_21,
            states.light.hue_ambiance_spot_22,
            states.light.hue_ambiance_spot_23,
            states.light.hue_go_1,
            states.light.hue_ambiance_spot_7,
            states.light.hue_ambiance_spot_8,
            states.light.hue_ambiance_spot_9,
            states.light.hue_color_candle_1,
            states.light.hue_filament_bulb_1,
            states.light.hue_filament_bulb_2,
            states.light.hue_ambiance_spot_17,
            states.light.hue_ambiance_spot_18,
            states.light.hue_ambiance_spot_1,
            states.light.hue_ambiance_spot_2,
            states.light.hue_ambiance_spot_3,
            states.light.hue_ambiance_spot_4,
            states.light.hue_ambiance_spot_5,
            states.light.hue_ambiance_spot_6,
            states.light.hue_ambiance_lamp_5,
            states.light.hue_ambiance_spot_14,
            states.light.hue_ambiance_spot_15,
            states.light.hue_ambiance_spot_16,
            states.light.hue_on_off_plug_1_2,
            states.light.hue_ambiance_candle_1,
            states.light.hue_ambiance_candle_3,
            states.light.hue_ambiance_spot_19,
            states.light.hue_ambiance_spot_20
          ] %}

          {% set devices = [
            states.switch.playstation_5,
            states.media_player.lg_tv,
            states.media_player.living_room
          ] %}

          {% set lights_on = lights | selectattr('state','eq','on') | list %}
          {% set lights_name = lights | selectattr('state','eq','on') | map(attribute='name') | join(', ') %}

          {% set devices_on = devices | selectattr('state','search','(on|cool|fan_only|playing)') | list %}
          {% set devices_name = devices_on | map(attribute='name') | join(', ') %}

          {% if (lights_on | length == 0) and (devices_on | length > 0) %}
            {{ devices_name | regex_replace(',([^,]*)$',' och\\1') }} staat aan

          {% elif (lights_on | length == 1) and (devices_on | length == 1) %}
            {{ lights_name }} en {{devices_name }} staat aan

          {% elif (lights_on | length == 1) and (devices_on | length > 1) %}
            {{ lights_name }}, {{ devices_name | regex_replace(',([^,]*)$',' och\\1') }} staan aan

          {% elif (lights_on | length > 1) and (devices_on | length == 1) %}
            {{ lights_on | length }} lampen en {{ devices_name }} staan aan

          {% elif (lights_on | length > 1) and (devices_on | length > 1) %}
            {{ lights_on | length }} lampen, {{ devices_name | regex_replace(',([^,]*)$',' och\\1') }} staan aan

          {% elif (lights_on | length == 1) and (devices_on | length == 0) %}
            {{ lights_name }} staat aan

          {% elif (lights_on | length > 1) and (devices_on | length == 0) %}
            {{ lights_on | length }} lampen staan aan

          {% else %}
            <font color='#6a7377'>Alles is uitgeschakeld</font>
          {% endif %}
          </b>
        mailbox: >
          {% set mailbox = states('sensor.mailbox') %}
          {% if mailbox | int(default=0) > 0 %}
            {{ '\U0001F4EC' }} <font color='#6a7377'><b>Brievenbus ({{ mailbox }})</b></font>
          {% endif %}
        vacuum: >
          {% set entity_id = 'vacuum.morty' %}
          {% if is_state(entity_id, 'cleaning') %}
            <b>Morty dammsuger</b>
          {% elif is_state(entity_id, 'returning') %}
            <b>Morty är färdig</b>
          {% endif %}
        weather: >
          {% set entity = 'weather.stille_steeg_west_12' %}
          {% if not is_state(entity, 'unknown') %}
            {% set temp = state_attr(entity, 'temperature') | round %}
            {% set precip = state_attr(entity, 'forecast')[0]['precipitation'] | round %}
              Voelt als {{ temp }}° en {{ 'geen kans op regen' if precip == 0
              else precip | string + 'mm regen \u2614\uFE0F' }}
          {% else %}
            Kan het weer niet lezen...
          {% endif %}
        washer: >
          {% set washer_job_state = states('sensor.wasmachine_washer_job_state') %}
          {% set washer_completion_time = states('sensor.wasmachine_washer_completion_time') %}          
          {% if washer_job_state != 'none' %}
            {% set completion_time = as_timestamp(washer_completion_time) | timestamp_custom('%H:%M') %}
            {{'\U0001F4A6'}} Wasmachine klaar om {{ completion_time }}
          {% endif %}
        dryer: >
          {% set dryer_job_state = states('sensor.droger_dryer_job_state') %}
          {% set dryer_completion_time = states('sensor.droger_dryer_completion_time') %}
          {% if dryer_job_state != 'none' %}
            {% set completion_time = as_timestamp(dryer_completion_time) | timestamp_custom('%H:%M') %}
            {{'\U0001F9FA'}} Droger klaar om {{ completion_time }}
          {% endif %}
        battery: >
          {% set entities = states.sensor 
            | selectattr('entity_id', 'search', 'battery')
            | rejectattr('entity_id', 'search', 'iphone')
            | map(attribute = 'entity_id') | list %}
          {% for sensor in entities if states(sensor) != 'unknown' and states(sensor) !=
          'unavailable' and states(sensor) != 'None' and states(sensor) | int(default=0) <= 5 %}
            {% if loop.first %} {{'\u26A0\uFE0F'}} Batterij {% else %}, {% endif %}
            {{ state_attr(sensor, 'friendly_name') }} {{ states(sensor) }}%
          {% endfor %}
