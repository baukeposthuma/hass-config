input_boolean:
  guest_mode:
    name: Guest mode
    initial: false
    icon: mdi:bed
    
homeassistant:
  customize:
    person.guest1:
      entity_picture: !secret guest_1_profile_photo
    person.guest2:
      entity_picture: !secret guest_2_profile_photo

person:
  - name: !secret guest_1_name
    id: guest1
    device_trackers:
      - !secret guest_1_device_tracker
  - name: !secret guest_2_name
    id: guest2
    device_trackers:
      - !secret guest_2_device_tracker
      
notify:
  - platform: group
    name: Guests
    services:
      - service: !secret guest_1_device_name
      - service: !secret guest_2_device_name

automation:
  - id: '37324783945023'
    alias: "Guest mode: When arriving home"
    description: Main automation for when a guest arrives home
    trigger:
      - platform: zone
        entity_id: 
          - person.guest1
          - person.guest2
        zone: zone.home
        event: enter
    condition:
      - condition: state
        entity_id: input_boolean.guest_mode
        state: "on"
    action:
      - service: notify.notify
        data:
          message: |
            {% if trigger.entity_id %}
              Welkom thuis {{ state_attr(trigger.entity_id, 'friendly_name') }}!
            {% else %}
              Welkom thuis!
            {% endif %}
      - service: script.turn_on
        target:
          entity_id: script.turn_on_outdoor_lights_for_5_minutes
      - service: script.turn_on
        target:
          entity_id: script.turn_on_motion_sensors_for_pet_accessible_rooms
      - if:
        - condition: state
          entity_id: input_boolean.heating_geolocation
          state: 'on'
        - condition: state
          entity_id: climate.woonkamer
          state: away
          attribute: preset_mode
        then:
          - service: climate.set_preset_mode
            data:
              preset_mode: home
            target:
              area_id: woonkamer
    mode: single
  - id: '8452855392473'
    alias: "Guest mode: When leaving home"
    description: Main automation for when the last guest leaves the home
    trigger:
      - platform: zone
        entity_id: 
          - person.guest1
          - person.guest2
        zone: zone.home
        event: leave
    condition:
      - condition: state
        entity_id: input_boolean.guest_mode
        state: "on"
    action:
      - if:
        - condition: not
          conditions:
            - condition: zone
              entity_id: 
                - person.guest1
              zone: zone.home
            - condition: zone
              entity_id: 
                - person.guest2
              zone: zone.home
        then:
          - service: notify.notify
            data:
              title: |
                {% if trigger.entity_id %}
                  Tot ziens {{ state_attr(trigger.entity_id, 'friendly_name') }}!
                {% else %}
                  Tot ziens!
                {% endif %}
              message: De verwarming en alle apparaten worden uitgeschakeld
          - service: script.turn_on
            target:
              entity_id: script.turn_off_motion_sensors_for_pet_accessible_rooms
          - service: script.turn_on
            target:
              entity_id: script.turn_off_all_lights_and_devices
          - condition: state
            entity_id: input_boolean.heating_geolocation
            state: 'on'
          - service: climate.set_preset_mode
            data:
              preset_mode: away
            target:
              area_id: woonkamer
        else:
          - service: notify.family
            data:
              message: |
                {% if trigger.entity_id %}
                  Tot ziens {{ state_attr(trigger.entity_id, 'friendly_name') }}!
                {% else %}
                  Tot ziens!
                {% endif %}
    mode: single
