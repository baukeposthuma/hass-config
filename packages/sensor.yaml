sensor:
  - platform: time_date
    display_options:
      - time
      - date

  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot
    scan_interval: 120

  # - platform: plex_recently_added
  #   token: !secret plex_token
  #   host: !secret plex_host
  #   port: !secret plex_port
  #   max: 1
  #   img_dir: /
  #   image_resolution: 900

  # - platform: waste_collection_schedule
  #   name: SophÃ¤mtning
  #   value_template: >
  #     {{ value.daysTo }}

    ####################################################
    #                                                  #
    #                   COMMAND LINE                   #
    #                                                  #
    ####################################################

  - platform: command_line
    name: rpi_cpu
    command: !secret rpi_cpu
    unit_of_measurement: '%'
    scan_interval: 300

  - platform: command_line
    name: rpi_mem
    command: !secret rpi_mem
    unit_of_measurement: '%'
    value_template: >
      {{ value | round(1) }}
    scan_interval: 300

  - platform: command_line
    name: rpi_sd
    command: !secret rpi_sd
    unit_of_measurement: '%'
    value_template: >
      {{ value[:-1] }}
    scan_interval: 300

  - platform: command_line
    name: rpi_uptime
    command: !secret rpi_uptime
    value_template: >
      {{ value | replace(' ', 'T') }}
    scan_interval: 300
    
  - platform: command_line
    name: hacs_installed
    command: |-
      python3 << EOF
      import os, json
      installed = {"repositories": []}
      path = "/config/.storage/hacs/"
      for file in os.listdir(path):
          name, ext = os.path.splitext(file)
          if ext == ".hacs":
              hacs_file = path + file
              with open(hacs_file, "r") as file:
                  dict = json.load(file)
                  name = dict["data"]["full_name"]
                  installed["repositories"] += [name]
                  file.close()
      print(json.dumps(installed))
      EOF
    value_template: >
      {{ value_json.repositories | count }}
    json_attributes:
      - repositories
    scan_interval: 86400